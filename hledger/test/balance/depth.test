# * balance command depth limiting

# ** 1.
$ hledger -f sample.journal balance --no-total --depth 1
                 $-1  assets
                  $2  expenses
                 $-2  income
                  $1  liabilities

# ** 2. If more than one flat depth, take the later one, when the later is smaller
$ hledger -f sample.journal balance --no-total --depth 2 --depth 1
                 $-1  assets
                  $2  expenses
                 $-2  income
                  $1  liabilities

# ** 3. If more than one flat depth, take the later one, when the later is bigger
$ hledger -f sample.journal balance --no-total --depth 1 --depth 2
                  $1  assets:bank
                 $-2  assets:cash
                  $1  expenses:food
                  $1  expenses:supplies
                 $-1  income:gifts
                 $-1  income:salary
                  $1  liabilities:debts

# ** 4. If more than one flat depth when supplied with query terms, take the smaller one, even if it's not last
$ hledger -f sample.journal balance --no-total depth:1 depth:2
                 $-1  assets
                  $2  expenses
                 $-2  income
                  $1  liabilities

# ** 5. Depth 0 aggregates everything into one line
$ hledger -f sample.journal balance --no-total --depth 0 assets
                 $-1  ...

# ** 6. Ditto in a multi-column balance report.
$ hledger -f sample.journal balance -M -e 2008/2 --depth 0 assets
Balance changes in 2008-01:

     || Jan 
=====++=====
 ... ||  $1 
-----++-----
     ||  $1 

# ** 7. Aggregate at different levels for regular expressions
$ hledger -f sample.journal balance --no-total --depth assets=1 --depth 2
                 $-1  assets
                  $1  expenses:food
                  $1  expenses:supplies
                 $-1  income:gifts
                 $-1  income:salary
                  $1  liabilities:debts

# ** 8. If two regexps match, use the more specific one
$ hledger -f sample.journal balance --no-total --depth assets:bank=2 --depth assets=1 assets
                 $-2  assets
                  $1  assets:bank

# ** 9. If a regexp matches, don't use the flat depth
$ hledger -f sample.journal balance --no-total --depth assets=2 --depth 1
                  $1  assets:bank
                 $-2  assets:cash
                  $2  expenses
                 $-2  income
                  $1  liabilities

# ** 10. Aggregate at different levels for regular expressions for tree mode
$ hledger -f sample.journal balance --no-total --depth assets=1 --depth 2 --tree
                 $-1  assets
                  $2  expenses
                  $1    food
                  $1    supplies
                 $-2  income
                 $-1    gifts
                 $-1    salary
                  $1  liabilities:debts

# ** 11. If a regexp matches, don't use the flat depth in tree mode
$ hledger -f sample.journal balance --no-total --depth assets=2 --depth 1 --tree
                 $-1  assets
                  $1    bank
                 $-2    cash
                  $2  expenses
                 $-2  income
                  $1  liabilities

# ** 12. If two regexps match, use the more specific one in tree mode
$ hledger -f sample.journal balance --no-total --depth assets:bank=2 --depth assets=1 --tree assets
                 $-1  assets
                  $1    bank
